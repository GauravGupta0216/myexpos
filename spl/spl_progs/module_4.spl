//------------------------------DEVICE MANAGER-------------------------------//

alias functionNum R1;
alias currentPID R2;
alias word R3;

//-----------------------------DISK STORE FUNCTION----------------------------//
if(functionNum == 1) then
	alias pageNum R3;
	alias blockNum R4;

	backup;
	R1 = ACQUIRE_DISK;
	R2 = currentPID;
	call RESOURCE_MANAGER;
	restore;

	[DISK_STATUS_TABLE + 1] = 1;                       //Store bit
	[DISK_STATUS_TABLE + 2] = pageNum;
	[DISK_STATUS_TABLE + 3] = blockNum;
	[DISK_STATUS_TABLE+4]=currentPID;
	store(pageNum, blockNum);
	[PROCESS_TABLE + 16*currentPID + 4] = WAIT_DISK;

	backup;
	call MOD_5;
	restore;

	return;
endif;	

//-------------------------------DISK_LOAD FUNCTION------------------------------//
if(functionNum == 2) then
	alias pageNum R3;
	alias blockNum R4;
	backup;
	R1 = 3;
	R2 = currentPID;
	call MOD_0;
	restore;

	[DISK_STATUS_TABLE + 0] = 1;
	[DISK_STATUS_TABLE + 1] = 0;
	[DISK_STATUS_TABLE + 2] = pageNum;
	[DISK_STATUS_TABLE + 3] = blockNum;
	[DISK_STATUS_TABLE + 4] = currentPID;

	load(pageNum,blockNum);
	[PROCESS_TABLE + 16*currentPID + 4] = WAIT_DISK;

	backup;
	call MOD_5;
	restore;

	return;
endif;	

//-------------------------TERMINAL WRITE FUNCTION----------------------------//
if(functionNum == 3) then
	//Calling Acquire Terminal
	multipush (R1,R2,R3,R4);
	R1 = 8;
	R2 = currentPID;
	call MOD_0;
	multipop (R1,R2,R3,R4);

	//print the word present in R3
	print R3;

	//calling Release Terminal
	multipush (R1,R2,R3,R4);
	R1 = 9;
	R2 = currentPID;
	call MOD_0;
	multipop (R1,R2,R3,R4);
	
	return;
endif;

//--------------------------TERMINAL READ FUNCTION----------------------------//
if(functionNum == 4) then
	//Calling Acquire Terminal
	multipush (R1,R2,R3,R4);
	R1 = 8;
	R2 = currentPID;
	call MOD_0;
	multipop (R1,R2,R3,R4);

	//Use read statement, for requesting to read from terminal
	read;
	[PROCESS_TABLE + currentPID*16 + 4] = WAIT_TERMINAL;
	
	//Invoking the Context Switch module
	multipush (R1,R2,R3,R4);
	call MOD_5;                     //Calling Scheduler
	multipop (R1,R2,R3,R4);
	
	alias phyWordAddr R4;
	phyWordAddr = [PTBR + 2*(word/512)]*512 + word%512;
	[phyWordAddr] = [PROCESS_TABLE + currentPID*16 + 8];
	
	return;
endif;

return;
