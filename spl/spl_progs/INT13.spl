alias userSP R4;
userSP = SP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13] = SP;
SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;

alias syscall R5;
syscall = [[PTBR+2*((userSP-5)/512)]*512 + ((userSP-5)%512)];

//----------------------------------------SEMGET SYSTEM CALL------------------------------------------------//
if(syscall == 17) then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 17;
	alias itr R6;
	alias entry R7;
	itr = 496;
	entry = -1;

	while(itr < 512) do
		if([[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 11]*512 + itr] == -1) then
			entry = itr;
			break;
		endif;
		itr = itr + 2;
	endwhile;

	if(entry == -1) then            //return -1
		[[PTBR+2*((userSP-1)/512)]*512+((userSP-1)%512)] = -1;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
		SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
		ireturn;
	endif;

	multipush(R3,R4,R5,R6,R7,R8);
	R1 = ACQUIRE_SEMAPHORE;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call RESOURCE_MANAGER;
	multipop(R3,R4,R5,R6,R7,R8);

	if(R0 == -1) then                                                //R0 is SEMAPHORE ID
		[[PTBR+2*((userSP-1)/512)]*512+((userSP-1)%512)] = -2;   //No Free Semaphores
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
		SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
		ireturn;
	endif;

	//Set Per Process Resource Table
	[[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 11]*512 + itr] = 1;
	[[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 11]*512 + itr + 1] = R0;

	[[PTBR+2*((userSP-1)/512)]*512+((userSP-1)%512)] = (entry - 496)/2;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
	ireturn;
endif;

//---------------------------------------------SEMRELEASE SYSTEM CALL----------------------------------------------------------//
if(syscall == 18) then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 18;
	alias itr R6;
	alias semID R7;
	alias userareapage R8;
	userareapage = [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 11];

	semID = [[PTBR + 2 * ((userSP - 4) / 512)] * 512 + (userSP - 4) % 512];
	if((semID<0) || (semID>7) || ([userareapage*512 + 496 + 2*semID] != 1)) then        //Invalid
		[[PTBR+2*((userSP-1)/512)]*512+((userSP-1)%512)] = -1;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
		SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
		ireturn;
	endif;

	backup;
	R1 = RELEASE_SEMAPHORE;
	R3 = [userareapage*512+496 + semID*2 + 1];
	R2 = [SYSTEM_STATUS_TABLE+1];
	call RESOURCE_MANAGER;
	restore;

	[userareapage*512 + 496 + 2*semID] = -1;	//invalidate the resource table entry

	[[PTBR+2*((userSP-1)/512)]*512+((userSP-1)%512)] = 0;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
	ireturn;
endif;

SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
ireturn;
